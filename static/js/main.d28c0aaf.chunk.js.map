{"version":3,"sources":["redux/dialogs-reducer.ts","components/Profile/MyPosts/Post/Post.module.css","components/Common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css","components/Header/Header.tsx","api/authAPI.js","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Navbar/Navbar.jsx","api/userAPI.js","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","assets/preloader/preloader.gif","components/Common/Preloader/Preloader.js","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/users-reducer.ts","redux/users-selector.ts","assets/images/userPhoto.png","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Login/Login.tsx","redux/app-reducer.ts","redux/sidebar-reducer.js","redux/redux-store.ts","App.js","reportWebVitals.js","index.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Login/Login.module.css","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css","hoc/withAuthRedirect.js"],"names":["SEND_MASSAGE","initialState","dialogs","id","name","massages","massage","newMassageBody","sendMassage","massageBody","type","dialogsReducer","state","action","module","exports","Header","props","className","s","header","header__item","header__logo","src","header__login","isAuth","login","onClick","logoutUser","to","instance","axios","withCredentials","baseURL","authAPI","get","email","password","rememberMe","post","delete","SET_AUTH_USER","setAuthUser","data","getAndSetAuthUser","dispatch","a","response","resultCode","authReducer","HeaderContainer","this","React","Component","connector","connect","auth","Navbar","nav","item","activeClassName","active","create","headers","userAPI","usersOnPage","currentUsersPage","followed","userID","profileAPI","userId","status","put","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","likeCounts","newPostText","profile","setUserProfile","getProfile","then","setStatus","getStatus","updateStatus","profileReducer","newPost","Post","alt","ProfilePostInputForm","initialValues","profilePostInput","onSubmit","value","addPost","validate","values","console","log","handleSubmit","handleChange","onChange","cols","rows","MyPosts","postsElements","map","postsBlock","MyPostsContainer","profilePage","Preloader","preloader","ProfileStatus","useState","editMode","setEditMode","useEffect","toggleEditMode","descriptionBlock__about","descriptionBlock__about_item","e","target","autoFocus","onBlur","onDoubleClick","fullName","compose","memo","profileImage","descriptionBlock","descriptionBlock__avatar","photos","large","Profile","ProfileContainer","match","params","mapStateToProps","withRouter","withAuthRedirect","News","Music","Settings","TOGGLE_FOLLOWED_SUCESS","SET_USERS","SET_CURRENT_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","items","totalUsersCount","totalUsersPage","isFetching","followingIsProgress","toggleFollowingProgress","toggleFollowSucess","setUsers","users","TogleIsFetching","toggleIsFollowingProgress","isFetchingId","usersReducer","user","selectedPage","filter","getItem","createSelector","usersPage","el","getIsFetching","getTotalUsersCount","getCurrentUsersPage","getFollowingIsProgress","getUsersOnPage","getToggleFollowingProgress","Users","pages","Math","ceil","arrPages","i","push","usersPageWrapper","switchPageButtonsRow","num","paginationPrevios","paginationItemActive","paginationItem","onChangePage","paginationSprad","length","usersWrapper","usersLeft","usersAvatar","small","userPhoto","usersFollowButton","disabled","some","toggleFollow","usersRight","usersInformation","usersName","usersFirstName","usersStatus","usersLocation","usersCountry","usersSity","bthShowMore","UsersContainer","setCurrentPage","changePage","getUsers","totalCount","userFollowed","loginUser","loginValidation","Yup","shape","required","min","validationSchema","errors","isSubmitting","handleBlur","touched","loginForm","loginForm__item","placeholder","checkboxInput","SET_INITIALIZED","isInitialized","appReducer","sidebarReducer","reducers","combineReducers","dialogPage","sidebar","app","store","createStore","applyMiddleware","thunk","DialogsContainer","lazy","AppContainer","getInitializedData","path","render","Suspense","fallback","MainApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d28c0aaf.chunk.js","sourcesContent":["import { number } from \"yup\"\r\nimport { array, string } from \"yup/lib/locale\"\r\n\r\nconst SEND_MASSAGE = 'SEND-MASSAGE'\r\n\r\n\r\nexport type InitialStateDialogsType = {\r\n\tid: number\r\n\tname: string\r\n}\r\nexport type InitialStateMassagesType = {\r\n\tid: number\r\n\tmassage: string\r\n}\r\n\r\nlet initialState = {\r\n\tdialogs: [\r\n\t\t{ id: 1, name: 'Anton' },\r\n\t\t{ id: 2, name: 'Vasa' },\r\n\t\t{ id: 3, name: 'Andrei' },\r\n\t\t{ id: 4, name: 'Valera' },\r\n\t\t{ id: 5, name: 'HrenZnaet' }\r\n\t] as Array<InitialStateDialogsType>,\r\n\tmassages: [\r\n\t\t{ id: 1, massage: 'hi' },\r\n\t\t{ id: 2, massage: 'how is tour it kamasutra' },\r\n\t\t{ id: 3, massage: 'yo' },\r\n\t] as Array<InitialStateMassagesType>,\r\n\tnewMassageBody: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase SEND_MASSAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmassages: [...state.massages, { id: 6, massage: action.massageBody }],\r\n\t\t\t\tnewMassageBody: ''\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\r\n\t}\r\n}\r\nexport type SendMassageActionType = {\r\n\ttype: typeof SEND_MASSAGE\r\n\tmassageBody: string\r\n}\r\n\r\nexport let sendMassage = (massageBody: string): SendMassageActionType => {\r\n\treturn { type: SEND_MASSAGE, massageBody }\r\n}\r\n\r\n\r\n\r\n\r\nexport default dialogsReducer;\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1GBhc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2io5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3uni2\",\"item\":\"Navbar_item__rtOld\",\"active\":\"Navbar_active__1bzNi\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Header.module.css'\r\n\r\n\r\ninterface HeaderPropsType {\r\n\tisAuth: boolean\r\n\tlogin: string | null\r\n\tlogoutUser: () => void\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n\treturn (\r\n\t\t<header className={s.header}>\r\n\t\t\t<div className={s.header__item}>\r\n\t\t\t\t<div className={s.header__logo}>\r\n\t\t\t\t\t<img src='https://webmentor.gr/wp-content/uploads/2018/11/logo300X300.png' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.header__item}>\r\n\t\t\t\t<div className={s.header__login}>\r\n\t\t\t\t\t{props.isAuth ? <div><div>{props.login}</div> <button onClick={props.logoutUser}>Logout</button></div> :\r\n\t\t\t\t\t\t<NavLink to='/login'>\r\n\t\t\t\t\t\t\tlogin\r\n\t\t\t\t\t</NavLink>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header >\r\n\t)\r\n}\r\n\r\nexport default Header;","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\nexport const authAPI = {\r\n\tsetAuthUser: () => instance.get(`auth/me`),\r\n\tlogin: (email, password, rememberMe) => instance.post('auth/login', { email, password, rememberMe }),\r\n\tlogout: () => instance.delete('auth/login'),\r\n}","import { authAPI } from \"../api/authAPI\"\r\n\r\nconst SET_AUTH_USER = 'SET_AUTH_USER'\r\n\r\n\r\n\r\ntype InitialStateType = {\r\n    id: number | null,\r\n    login: string | null,\r\n    email: string | null,\r\n    isAuth: boolean\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_AUTH_USER:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype SetAuthUserActionType = {\r\n    type: typeof SET_AUTH_USER\r\n    data: {\r\n        id: number | null\r\n        login: string | null\r\n        email: string | null\r\n        isAuth: boolean\r\n    }\r\n}\r\n\r\nexport const setAuthUser = (id: number | null, login: string | null, email: string | null, isAuth: boolean): SetAuthUserActionType => {\r\n    return { type: SET_AUTH_USER, data: { id, login, email, isAuth } }\r\n}\r\n\r\nexport const getAndSetAuthUser = () => {\r\n    return async (dispatch: any) => {\r\n        let response = await authAPI.setAuthUser()\r\n        if (response.data.resultCode == 0) {\r\n            let { id, login, email } = response.data.data\r\n            dispatch(setAuthUser(id, login, email, true))\r\n        }\r\n        return response\r\n    }\r\n}\r\n\r\nexport const loginUser = (email: string, password: string, rememberMe: boolean) => async (dispatch: any) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n\r\n        dispatch(getAndSetAuthUser())\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUser(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer","import React from 'react'\r\nimport Header from './Header'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { AppStateType } from '../../redux/redux-store'\r\nimport { getAndSetAuthUser, logoutUser } from '../../redux/auth-reducer'\r\n\r\n\r\ninterface HeaderMapStateToProps {\r\n\tlogin: string | null\r\n\tisAuth: boolean\r\n}\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsFromReduxType> {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Header {...this.props} />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): HeaderMapStateToProps => ({\r\n\tlogin: state.auth.login,\r\n\tisAuth: state.auth.isAuth,\r\n})\r\n\r\nlet connector = connect(mapStateToProps, { getAndSetAuthUser, logoutUser })\r\n\r\ntype HeaderPropsFromReduxType = ConnectedProps<typeof connector>\r\n\r\nexport default connector(HeaderContainer);","import { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n\treturn (\r\n\t\t<nav className={s.nav}>\r\n\t\t\t<div className={s.item}>\r\n\t\t\t\t<NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.item}>\r\n\t\t\t\t<NavLink to='/dialogs' activeClassName={s.active}>Massagies</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.item}>\r\n\t\t\t\t<NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.item}>\r\n\t\t\t\t<NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.item}>\r\n\t\t\t\t<NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.item}>\r\n\t\t\t\t<NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n\t\t\t</div>\r\n\r\n\t\t</nav>)\r\n}\r\n\r\nexport default Navbar;","import axios from \"axios\"\r\n\r\nexport * as axios from 'axios'\r\n\r\nlet instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: {\r\n\t\t'API-KEY': '030ecbf1-29d0-474d-af46-18c1b5417bda'\r\n\t}\r\n})\r\n\r\n\r\nexport const userAPI = {\r\n\tgetUsers: (usersOnPage = 10, currentUsersPage = 1) => {\r\n\t\treturn instance.get(`users?count=${usersOnPage}&page=${currentUsersPage}`)\r\n\t},\r\n\ttoggleFollow: (followed, userID) => {\r\n\t\tif (!followed) {\r\n\t\t\treturn instance.post(`follow/${userID}`)\r\n\t\t}\r\n\t\tif (followed) {\r\n\t\t\treturn instance.delete(`follow/${userID}`)\r\n\t\t}\r\n\t},\r\n}\r\n\r\nexport const profileAPI = {\r\n\tgetProfile: (userId) => {\r\n\t\treturn instance.get(`profile/${userId}`)\r\n\t},\r\n\tgetStatus: (userId) => {\r\n\t\treturn instance.get(`/profile/status/${userId}`)\r\n\t},\r\n\tupdateStatus: (status) => {\r\n\t\treturn instance.put(`/profile/status`, { status: status })\r\n\t}\r\n}","import { profileAPI } from \"../api/userAPI\"\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\n\r\nexport type InitialStatePostsType = {\r\n\tid: number\r\n\tmassage: string\r\n\tlikeCounts: number\r\n}\r\n\r\nexport type InitialStateProfileType = {\r\n\tuserId: number\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string\r\n\tfullName: string\r\n\tcontacts: {\r\n\t\tgithub: string\r\n\t\tvk: string\r\n\t\tfacebook: string\r\n\t\tinstagram: string\r\n\t\ttwitter: string\r\n\t\twebsite: string\r\n\t\tyoutube: string\r\n\t\tmainLink: string\r\n\t}\r\n\tphotos: {\r\n\t\tsmall: string\r\n\t\tlarge: string\r\n\t}\r\n}\r\n\r\nlet initialState = {\r\n\tposts: [\r\n\t\t{ id: 1, massage: 'hi man', likeCounts: 3 },\r\n\t\t{ id: 2, massage: 'watsap', likeCounts: 6 },\r\n\t] as Array<InitialStatePostsType>,\r\n\tnewPostText: 'it-camasutra' as string,\r\n\tprofile: null as InitialStateProfileType | null,\r\n\tstatus: '' as string\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST:\r\n\t\t\tlet newPost = {\r\n\t\t\t\tid: 5,\r\n\t\t\t\tmassage: action.massageBody,\r\n\t\t\t\tlikeCounts: 0,\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, newPost],\r\n\t\t\t}\r\n\t\tcase SET_USER_PROFILE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: action.profile,\r\n\t\t\t}\r\n\t\tcase SET_STATUS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\r\n\t}\r\n\r\n}\r\n\r\ntype AddPostActionType = {\r\n\ttype: typeof ADD_POST\r\n\tmassageBody: string\r\n}\r\n\r\nexport let addPost = (massageBody: string): AddPostActionType => {\r\n\treturn { type: ADD_POST, massageBody }\r\n}\r\n\r\ntype updateNewPostTextActionCreatorActionType = {\r\n\ttype: typeof UPDATE_NEW_POST_TEXT\r\n\tnewText: string\r\n}\r\n\r\nexport let updateNewPostTextActionCreator = (newText: string): updateNewPostTextActionCreatorActionType => {\r\n\treturn { type: UPDATE_NEW_POST_TEXT, newText }\r\n}\r\n\r\ntype SetUserProfileActionType = {\r\n\ttype: typeof SET_USER_PROFILE\r\n\tprofile: InitialStateProfileType\r\n}\r\n\r\nexport let setUserProfile = (profile: InitialStateProfileType): SetUserProfileActionType => {\r\n\treturn { type: SET_USER_PROFILE, profile }\r\n}\r\n\r\n\r\n\r\nexport const getProfile = (userId: number) => (dispatch: any) => {\r\n\tprofileAPI.getProfile(userId)\r\n\t\t.then(response => dispatch(setUserProfile(response.data)))\r\n}\r\n\r\nexport let setStatus = (status: string) => {\r\n\treturn { type: SET_STATUS, status }\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n\tlet response = await profileAPI.getStatus(userId)\r\n\tdispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n\tlet response = await profileAPI.updateStatus(status)\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(setStatus(status))\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nexport default profileReducer;","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\ninterface PostPropsType {\r\n\tmassage: string\r\n\tlikeCounts: number\r\n\tkey: number\r\n}\r\n\r\nconst Post = (props: PostPropsType) => {\r\n\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src=\"https://i.ytimg.com/vi/TQLI5oH9oTk/maxresdefault.jpg\" alt=\"\" />\r\n\t\t\t{props.massage}\r\n\t\t\t<div>like {props.likeCounts}</div>\r\n\t\t</div>\r\n\r\n\r\n\t)\r\n}\r\n\r\nexport default Post;","import s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport React from 'react'\r\nimport { Formik } from 'formik'\r\nimport { PropsFromReduxType } from './MyPostsContainer'\r\n\r\n\r\n\r\nconst MyPosts = (props: PropsFromReduxType) => {\r\n\tlet postsElements = props.posts.map(post => <Post key={post.id} massage={post.massage} likeCounts={post.likeCounts} />)\r\n\treturn (\r\n\t\t<div className={s.postsBlock}>\r\n\t\t\t<h3>My posts</h3>\r\n\t\t\t<div>\r\n\t\t\t\t<ProfilePostInputForm addPost={props.addPost} />\r\n\t\t\t</div>\r\n\t\t\t<div className={s.posts}>\r\n\t\t\t\t{postsElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\ntype ProfilePostInputFormPropsType = {\r\n\taddPost: (massageBody: string) => void\r\n}\r\n\r\nconst ProfilePostInputForm = (props: ProfilePostInputFormPropsType) => {\r\n\r\n\tconst FormikInitialValue = { profilePostInput: '' }\r\n\ttype FormikInitialValueType = typeof FormikInitialValue\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={FormikInitialValue as FormikInitialValueType}\r\n\t\t\tonSubmit={(value) => props.addPost(value.profilePostInput)}\r\n\t\t\tvalidate={(values) => console.log(values)}\r\n\t\t>\r\n\t\t\t{({ values, handleSubmit, handleChange }) => (\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t<textarea onChange={handleChange}\r\n\t\t\t\t\t\t\tname=\"profilePostInput\"\r\n\t\t\t\t\t\t\tcols={30}\r\n\t\t\t\t\t\t\trows={10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t<button >add Post</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t</Formik >\r\n\t)\r\n}\r\n\r\nexport default MyPosts;","\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { addPost } from '../../../redux/profile-reducer'\r\nimport { AppStateType } from '../../../redux/redux-store'\r\nimport { InitialStatePostsType } from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<InitialStatePostsType>\r\n    newPostText: string\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps, { addPost })\r\nexport type PropsFromReduxType = ConnectedProps<typeof connector>\r\n\r\nconst MyPostsContainer = connector(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.76910a23.gif\";","import preloader from './../../../assets/preloader/preloader.gif'\r\nimport s from './Preloader.module.css'\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={preloader} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","\r\nimport React, { useEffect, useState } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\ninterface ProfileStatusPropsType {\r\n\tstatus: string\r\n\tfullName: string\r\n\tupdateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatus: React.FC<ProfileStatusPropsType> = (props) => {\r\n\r\n\tconst [status, setStatus] = useState<string>(props.status)\r\n\tconst [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status])\r\n\r\n\tconst toggleEditMode = () => {\r\n\t\tsetEditMode(!editMode)\r\n\t\tprops.updateStatus(status)\r\n\t}\r\n\r\n\tconst changedStatus = (value: string) => {\r\n\t\tsetStatus(value)\r\n\t}\r\n\r\n\tconsole.log('RENDER');\r\n\r\n\treturn (\r\n\t\t<div >\r\n\t\t\t<div className={s.descriptionBlock__about}>\r\n\t\t\t\t<div className={s.descriptionBlock__about_item}>Статус:</div> {editMode ?\r\n\t\t\t\t\t<input onChange={(e) => changedStatus(e.target.value)} autoFocus={true} onBlur={toggleEditMode} value={status} />\r\n\t\t\t\t\t: <span onDoubleClick={toggleEditMode}>{props.status ? props.status : 'Статус'}</span>}\r\n\t\t\t\t<div className={s.descriptionBlock__about_item}>Имя:</div>  {props.fullName}\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t)\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import Preloader from '../../Common/Preloader/Preloader';\r\nimport React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus';\r\nimport { compose } from 'redux';\r\nimport { InitialStateProfileType } from '../../../redux/profile-reducer'\r\n\r\n\r\n\r\ntype ProfileInfoPropsType = {\r\n\tprofile: InitialStateProfileType | null\r\n\tstatus: string\r\n\tupdateStatus: (status: string) => void\r\n\tgetStatus: (userId: number) => void\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n\tif (!props.profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div >\r\n\t\t\t<div>\r\n\t\t\t\t<img className={s.profileImage} src=\"https://img5.goodfon.ru/original/1920x1200/3/29/priroda-ozero-peizazh-gornye-vershiny-gory.jpg\" alt=\"\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={s.descriptionBlock} >\r\n\t\t\t\t<div className={s.descriptionBlock__avatar}>\r\n\t\t\t\t\t<img src={props.profile.photos.large} alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<ProfileStatus fullName={props.profile.fullName} status={props.status} updateStatus={props.updateStatus} />\r\n\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\n\r\nexport default compose(React.memo)(ProfileInfo);","import s from './Profile.module.css'\r\nimport React from 'react'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { ProfileContainerPropsFromReduxType } from './ProfileContainer'\r\n\r\n\r\n\r\nconst Profile = (props: ProfileContainerPropsFromReduxType) => {\r\n\tif (!props.isAuth) return <Redirect to='/login' />\r\n\treturn (\r\n\t\t<div >\r\n\t\t\t<ProfileInfo profile={props.profile} getStatus={props.getStatus} status={props.status} updateStatus={props.updateStatus} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from './Profile';\r\nimport { setUserProfile, getProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n/* import { RouteComponentProps } from 'react-router' */\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-store'\r\nimport { InitialStateProfileType } from '../../redux/profile-reducer'\r\n\r\ninterface MathParamType {\r\n\tuserId?: any\r\n}\r\n\r\ninterface OwnPropsType extends RouteComponentProps<MathParamType> {\r\n\r\n}\r\n\r\ntype PropsType = OwnPropsType & ProfileContainerPropsFromReduxType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = 16500\r\n\t\t}\r\n\t\tthis.props.getProfile(userId)\r\n\t\tthis.props.getStatus(userId)\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div >\r\n\t\t\t\t<Profile {...this.props} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n\t\t\t</div >\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\ninterface mapStateToPropsType {\r\n\tprofile: null | InitialStateProfileType\r\n\tisAuth: boolean\r\n\tstatus: string\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n\tprofile: state.profilePage.profile,\r\n\tisAuth: state.auth.isAuth,\r\n\tstatus: state.profilePage.status\r\n})\r\n\r\nconst connector = connect(mapStateToProps, { setUserProfile, getProfile, getStatus, updateStatus })\r\nexport type ProfileContainerPropsFromReduxType = ConnectedProps<typeof connector>\r\n\r\n\r\nexport default compose(connect(mapStateToProps, { setUserProfile, getProfile, getStatus, updateStatus }), withRouter, withAuthRedirect)(ProfileContainer)","import s from './News.module.css'\r\n\r\nconst News = () => {\r\n\treturn (\r\n\t\t<div className=\"\">\r\n\t\t\tNews\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default News","import s from './Music.module.css'\r\n\r\nconst Music = () => {\r\n\treturn (\r\n\t\t<div className=\"\">\r\n\t\t\tMusic\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Music","\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"\">\r\n\t\t\tSettings\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Settings","import { act } from \"react-dom/test-utils\"\r\nimport { userAPI } from \"../api/userAPI\"\r\n\r\nconst TOGGLE_FOLLOWED_SUCESS = 'TOGGLE_FOLLOWED_SUCESS'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_TOTAL_USERS_COUNT = 'SET_CURRENT_TOTAL_USERS_COUNT'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nexport type InitialStateItemsType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    followed: boolean\r\n\r\n}\r\n\r\nlet initialState = {\r\n    items: [] as Array<InitialStateItemsType>,\r\n    usersOnPage: 7 as number,\r\n    totalUsersCount: 5 as number,\r\n    totalUsersPage: 1 as number,\r\n    currentUsersPage: 1 as number,\r\n    isFetching: false as boolean,\r\n    followingIsProgress: false as boolean,\r\n    toggleFollowingProgress: [] as Array<number>,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case TOGGLE_FOLLOWED_SUCESS:\r\n            return {\r\n                ...state,\r\n                items: state.items.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: !user.followed }\r\n                    }\r\n                    else return user\r\n                }),\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                items: [...action.users]\r\n            }\r\n        case SET_CURRENT_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentUsersPage: action.selectedPage\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingIsProgress: action.followingIsProgress,\r\n                toggleFollowingProgress: state.followingIsProgress ? state.toggleFollowingProgress.filter(id => id != action.isFetchingId) : [...state.toggleFollowingProgress, action.isFetchingId]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\ntype ToggleFollowSucessActionType = {\r\n    type: typeof TOGGLE_FOLLOWED_SUCESS\r\n    userId: number\r\n}\r\n\r\nexport const toggleFollowSucess = (userId: number): ToggleFollowSucessActionType => {\r\n    return { type: TOGGLE_FOLLOWED_SUCESS, userId }\r\n}\r\n\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: InitialStateItemsType\r\n}\r\n\r\nexport const setUsers = (users: InitialStateItemsType): SetUsersActionType => {\r\n    return { type: SET_USERS, users }\r\n}\r\n\r\ntype SetCurrentTotalUsersCountActionType = {\r\n    type: typeof SET_CURRENT_TOTAL_USERS_COUNT\r\n    users: InitialStateItemsType\r\n}\r\n\r\nexport const setCurrentTotalUsersCount = (users: InitialStateItemsType): SetCurrentTotalUsersCountActionType => {\r\n    return { type: SET_CURRENT_TOTAL_USERS_COUNT, users }\r\n}\r\n\r\ntype SetCurrentPageActionType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    selectedPage: number\r\n}\r\n\r\n\r\nexport const setCurrentPage = (selectedPage: number): SetCurrentPageActionType => {\r\n    return { type: SET_CURRENT_PAGE, selectedPage }\r\n}\r\n\r\ntype TogleIsFetchingActionType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\n\r\nexport const TogleIsFetching = (isFetching: boolean): TogleIsFetchingActionType => {\r\n    return { type: TOGGLE_IS_FETCHING, isFetching }\r\n}\r\n\r\ntype ToggleIsFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    followingIsProgress: boolean\r\n    isFetchingId: number\r\n}\r\n\r\nexport const toggleIsFollowingProgress = (followingIsProgress: boolean, isFetchingId: number): ToggleIsFollowingProgressActionType => {\r\n    return { type: TOGGLE_IS_FOLLOWING_PROGRESS, followingIsProgress, isFetchingId }\r\n}\r\n\r\n\r\n\r\n\r\nexport const getUsers = (usersOnPage: number, currentUsersPage: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(TogleIsFetching(true))\r\n        userAPI.getUsers(usersOnPage, currentUsersPage)\r\n            .then(response => {\r\n                dispatch(TogleIsFetching(false))\r\n                dispatch(setCurrentTotalUsersCount(response.data.totalCount))\r\n                dispatch(setUsers(response.data.items))\r\n            })\r\n    }\r\n}\r\n\r\nexport const toggleFollow = (userFollowed: boolean, userId: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        let response: any = await userAPI.toggleFollow(userFollowed, userId)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(toggleFollowSucess(userId))\r\n            dispatch(toggleIsFollowingProgress(false, userId))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const changePage = (usersOnPage: number, selectedPage: number) => {\r\n    return async (dispatch: any) => {\r\n        let response = await userAPI.getUsers(usersOnPage, selectedPage)\r\n        dispatch(TogleIsFetching(false))\r\n        dispatch(setUsers(response.data.items))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default usersReducer","import { createSelector } from \"reselect\"\r\nimport { AppStateType } from './redux-store'\r\n\r\nexport const getItemsSelector = (state: AppStateType) => {\r\n    return state.usersPage.items\r\n}\r\n\r\nexport const getItem = createSelector(getItemsSelector, (items) => {\r\n    return items.filter(el => true)\r\n})\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentUsersPage = (state: AppStateType) => {\r\n    return state.usersPage.currentUsersPage\r\n}\r\n\r\nexport const getFollowingIsProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingIsProgress\r\n}\r\n\r\nexport const getUsersOnPage = (state: AppStateType) => {\r\n    return state.usersPage.usersOnPage\r\n}\r\n\r\nexport const getToggleFollowingProgress = (state: AppStateType) => {\r\n    return state.usersPage.toggleFollowingProgress\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/userPhoto.71a0e7d8.png\";","import React from 'react'\r\nimport s from './Users.module.css'\r\nimport userPhoto from './../../../src/assets/images/userPhoto.png'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UserContainerPropsFromReduxType } from './UsersContainer'\r\nimport { InitialStateItemsType } from '../../redux/users-reducer'\r\n\r\ninterface UsersPropsType {\r\n    totalUsersCount: number\r\n    usersOnPage: number\r\n    currentUsersPage: number\r\n    onChangePage: (selectedPage: number) => void\r\n    items: Array<InitialStateItemsType>\r\n    toggleFollowSucess: (userId: number) => void\r\n    isFetching: boolean\r\n    toggleIsFollowingProgress: (followingIsProgress: boolean, isFetchingId: number) => void\r\n    toggleFollowingProgress: Array<number>\r\n    toggleFollow: (userFollowed: boolean, userId: number) => void\r\n}\r\n\r\nlet Users = (props: UsersPropsType) => {\r\n\r\n    let pages = Math.ceil(props.totalUsersCount / props.usersOnPage)\r\n    let arrPages = []\r\n    for (let i = 1; i <= pages; i++) {\r\n        arrPages.push(i)\r\n    }\r\n    return (\r\n        <div className={s.usersPageWrapper} >\r\n            <div className={s.switchPageButtonsRow}>\r\n                {arrPages.filter(num => props.currentUsersPage >= 7 && num === 1)\r\n                    .map(num =>\r\n                        <div className={s.paginationPrevios}>\r\n                            <div className={props.currentUsersPage === num ? s.paginationItemActive : s.paginationItem} onClick={(e) => { props.onChangePage(num) }}>1</div>\r\n                            <div className={s.paginationSprad}>.....</div>\r\n                        </div>)}\r\n                {arrPages.filter(num => num >= +props.currentUsersPage - 5 && num <= +props.currentUsersPage + 5)\r\n                    .map(num => {\r\n                        return <div className={props.currentUsersPage === num ? s.paginationItemActive : s.paginationItem} onClick={(e) => { props.onChangePage(num) }}>{num}</div>\r\n                    })\r\n                }\r\n                {arrPages.filter(num => num === 1 && props.currentUsersPage <= +arrPages.length - 5)\r\n                    .map(num =>\r\n                        <div className={s.paginationPrevios}>\r\n                            <div className={s.paginationSprad}>.....</div>\r\n                            <div className={props.currentUsersPage === num ? s.paginationItemActive : s.paginationItem} onClick={(e) => { props.onChangePage(arrPages.length) }}>{arrPages.length}</div>\r\n                        </div>)}\r\n            </div>\r\n            {props.isFetching ? <Preloader /> :\r\n                props.items.map(user => (\r\n                    <div className={s.usersWrapper} key={user.id}>\r\n                        <div className={s.usersLeft}>\r\n                            <div className={s.usersAvatar}>\r\n                                <NavLink to={`/profile/${user.id}`}>\r\n                                    <img src={user.photos.small ? user.photos.small : userPhoto} />\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={s.usersFollowButton}>\r\n                                <button disabled={props.toggleFollowingProgress.some(el => el == user.id)} onClick={() => {\r\n                                    props.toggleFollow(user.followed, user.id)\r\n                                }}>{user.followed ? 'unfollow' : 'follow'}</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.usersRight}>\r\n                            <div className={s.usersInformation}>\r\n                                <div className={s.usersName}>\r\n                                    <div className={s.usersFirstName}>{user.name}</div>\r\n                                </div>\r\n                                <div className={s.usersStatus}>{user.status}</div>\r\n                            </div>\r\n                            <div className={s.usersLocation}>\r\n                                <div className={s.usersCountry}>{'user.location.country'}</div>\r\n                                <div className={s.usersSity}>{'user.location.sity'}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            <button className={s.bthShowMore}>Show more</button>\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Users\r\n\r\n\r\n","import React from 'react'\r\nimport { connect, ConnectedProps } from \"react-redux\"\r\nimport { toggleFollowSucess, setCurrentPage, TogleIsFetching, toggleIsFollowingProgress, getUsers, toggleFollow, changePage } from \"../../redux/users-reducer\"\r\nimport { getCurrentUsersPage, getFollowingIsProgress, getIsFetching, getItem, getToggleFollowingProgress, getTotalUsersCount, getUsersOnPage } from '../../redux/users-selector'\r\nimport { AppStateType } from '../../redux/redux-store'\r\nimport Users from \"./Users\"\r\n\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component<UserContainerPropsFromReduxType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.usersOnPage, this.props.currentUsersPage)\r\n    }\r\n\r\n    onChangePage = (selectedPage: number) => {\r\n        this.props.TogleIsFetching(true)\r\n        this.props.setCurrentPage(selectedPage)\r\n        this.props.changePage(this.props.usersOnPage, selectedPage)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                usersOnPage={this.props.usersOnPage}\r\n                currentUsersPage={this.props.currentUsersPage}\r\n                onChangePage={this.onChangePage}\r\n                items={this.props.items}\r\n                toggleFollowSucess={this.props.toggleFollowSucess}\r\n                isFetching={this.props.isFetching}\r\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                toggleFollow={this.props.toggleFollow}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        items: getItem(state),\r\n        isFetching: getIsFetching(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentUsersPage: getCurrentUsersPage(state),\r\n        usersOnPage: getUsersOnPage(state),\r\n        followingIsProgress: getFollowingIsProgress(state),\r\n        toggleFollowingProgress: getToggleFollowingProgress(state)\r\n    }\r\n\r\n}\r\n\r\nconst connector = connect(mapStateToProps, { toggleFollowSucess, setCurrentPage, TogleIsFetching, toggleIsFollowingProgress, getUsers, toggleFollow, changePage })\r\n\r\nexport type UserContainerPropsFromReduxType = ConnectedProps<typeof connector>\r\n\r\nexport default connector(UsersContainer)\r\n","import React from 'react'\r\nimport { Formik, Field } from 'formik'\r\nimport { AppStateType } from '../../redux/redux-store'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport * as Yup from 'yup'\r\nimport s from './Login.module.css'\r\n/* import {AppStateType} from '../../redux/redux-store' */\r\nimport { loginUser } from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Login = (props: LoginPropsType) => {\r\n\r\n\r\n\tlet loginValidation = Yup.object().shape({\r\n\t\temail: Yup.string()\r\n\t\t\t.email('Invalid email address')\r\n\t\t\t.required('Requared'),\r\n\t\tpassword: Yup.string()\r\n\t\t\t.min(8, 'Must bee longer than 8 charecters')\r\n\t\t\t.required('Requared')\r\n\t})\r\n\r\n\tconst initialValues = {\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\trememberMe: false\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.isAuth ? (\r\n\t\t\t\t<Redirect to='/profile' />\r\n\t\t\t) : (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Login </h2>\r\n\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\tinitialValues={initialValues}\r\n\t\t\t\t\t\t\tonSubmit={({ email, password, rememberMe }) => props.loginUser(email, password, rememberMe)}\r\n\t\t\t\t\t\t\tvalidationSchema={loginValidation}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{({ values, handleSubmit, handleChange, isSubmitting, errors, handleBlur, touched }) => (\r\n\t\t\t\t\t\t\t\t<div className={s.loginForm} >\r\n\t\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={s.loginForm__item}>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='e-mail'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{errors.email && touched.email ? errors.email : ''}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t< div className={s.loginForm__item} >\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{errors.password && touched.password ? errors.password : ''}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t< div className={s.loginForm__item} >\r\n\t\t\t\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={s.checkboxInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* value={isSubmitting} */\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='rememberMe'\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Remember me </span>\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t< button > Login </button>\r\n\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Formik>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\ninterface mapStateToPropsType {\r\n\tisAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n}\r\n\r\nconst connector = connect(mapStateToProps, { loginUser })\r\ntype LoginPropsType = ConnectedProps<typeof connector>\r\n\r\nexport default connector(Login)","import { authAPI } from \"../api/authAPI\"\r\nimport { getAndSetAuthUser } from \"./auth-reducer\"\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\nexport type initialStateType = {\r\n    isInitialized: boolean,\r\n}\r\n\r\nlet initialState: initialStateType = {\r\n    isInitialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                isInitialized: true,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype setInitializedActionType = {\r\n    type: typeof SET_INITIALIZED\r\n}\r\n\r\nexport const setInitialized = (): setInitializedActionType => {\r\n    return { type: SET_INITIALIZED, }\r\n}\r\n\r\n\r\n\r\nexport const getInitializedData = () => {\r\n    return async (dispatch: any) => {\r\n        let result = await dispatch(getAndSetAuthUser())\r\n        dispatch(setInitialized())\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default appReducer","import { act } from \"react-dom/test-utils\"\r\n\r\nlet initialState = {\r\n\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\treturn state\r\n}\r\n\r\n\r\n\r\nexport default sidebarReducer;\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport profileReducer from './profile-reducer'\r\nimport dialogsReducer from './dialogs-reducer'\r\nimport sidebarReducer from './sidebar-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport thunk from 'redux-thunk'\r\nimport appReducer from './app-reducer'\r\n\r\nlet reducers = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tdialogPage: dialogsReducer,\r\n\tsidebar: sidebarReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer,\r\n\tapp: appReducer\r\n\r\n})\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport default store","\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport Login from './components/Login/Login'\r\nimport React from 'react'\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { getInitializedData, } from './redux/app-reducer';\r\nimport Preloader from './components/Common/Preloader/Preloader';\r\nimport store from './redux/redux-store';\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\n\r\n\r\n\r\nexport const example = {\r\n  first: '1',\r\n  second: '2'\r\n}\r\n\r\n\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    props.getInitializedData()\r\n\r\n  })\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      {props.isInitialized ?\r\n        <div className='app-wrapper'>\r\n          <HeaderContainer />\r\n          <Navbar />\r\n          <div className='app-wrapper-content'>\r\n            <Route path='/dialogs' render={() => {\r\n              return (\r\n                <React.Suspense fallback={<Preloader />}>\r\n                  <DialogsContainer />\r\n                </React.Suspense>\r\n              )\r\n            }} />\r\n            <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\r\n            <Route path='/news' render={() => <News />} />\r\n            <Route path='/music' render={() => <Music />} />\r\n            <Route path='/settings' render={() => <Settings />} />\r\n            <Route path='/users' render={() => <UsersContainer />} />\r\n            <Route path='/login' render={() => <Login />} />\r\n          </div>\r\n        </div> : <Preloader />\r\n      }\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isInitialized: state.app.isInitialized\r\n  }\r\n}\r\n\r\n\r\nconst AppContainer = connect(mapStateToProps, { getInitializedData })(App);\r\n\r\n\r\nconst MainApp = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default MainApp","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport MainApp from './App';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<MainApp />\r\n\t</React.StrictMode >,\r\n\tdocument.getElementById('root'))\r\n\r\n\r\n\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n\r\n\r\n//<App state={store.getState()} dispatch={store.dispatch.bind(store)} store={store} />","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1Zt3b\",\"descriptionBlock__avatar\":\"ProfileInfo_descriptionBlock__avatar__3DcYL\",\"descriptionBlock__abou\":\"ProfileInfo_descriptionBlock__abou__3pWkA\",\"descriptionBlock__about_item\":\"ProfileInfo_descriptionBlock__about_item__1fdzX\",\"profileImage\":\"ProfileInfo_profileImage__2cJIQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__aM1g7\",\"header__item\":\"Header_header__item__Cksl_\",\"header__login\":\"Header_header__login__1DNQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm__item\":\"Login_loginForm__item__1Xo8A\",\"loginForm\":\"Login_loginForm__1MBnn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPageWrapper\":\"Users_usersPageWrapper__FQ6Vj\",\"usersWrapper\":\"Users_usersWrapper__3pVJl\",\"usersLeft\":\"Users_usersLeft__3WLhP\",\"usersRight\":\"Users_usersRight__Ugz1F\",\"usersInformation\":\"Users_usersInformation__2bJV8\",\"usersName\":\"Users_usersName__13ntw\",\"usersFirstName\":\"Users_usersFirstName__1ys-r\",\"usersFollowButton\":\"Users_usersFollowButton__1lzWY\",\"usersLocation\":\"Users_usersLocation__2kQoY\",\"usersAvatar\":\"Users_usersAvatar__sBhX2\",\"bthShowMore\":\"Users_bthShowMore__3jHwJ\",\"switchPageButtonsRow\":\"Users_switchPageButtonsRow__3mp-G\",\"paginationItem\":\"Users_paginationItem__25EaO\",\"paginationItemActive\":\"Users_paginationItemActive__3uKIV\",\"paginationSprad\":\"Users_paginationSprad__3c2ww\",\"paginationPrevios\":\"Users_paginationPrevios__1jJ9Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1_2Eg\",\"posts\":\"MyPosts_posts__1_39f\"};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst withAuthRedirect = (Component) => {\r\n\tconst RedirectComponent = (props) => {\r\n\t\tif (!props.isAuth) return <Redirect to='/login' />\r\n\t\treturn (\r\n\t\t\t<Component {...props} />\r\n\t\t)\r\n\t}\r\n\r\n\tconst mapStateToProps = (state) => {\r\n\t\treturn {\r\n\t\t\tisAuth: state.auth.isAuth\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\nexport default withAuthRedirect\r\n\r\n"],"sourceRoot":""}