{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Masage/Massage.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Massage","massage","DialogsInputForm","initialValues","massageBody","onSubmit","value","sendMassage","handleSubmit","values","handleChange","onChange","type","Dialogs","dialogElements","dialogs","map","massagesElements","massages","dialogsItems","connector","connect","state","dialogPage","compose","withRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,qGCmBrMC,EAXI,SAACC,GACnB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACC,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACC,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCIdC,EARC,SAACT,GAChB,OACC,qBAAKG,UAAWC,IAAEM,QAAlB,SACEV,EAAMU,W,QC6BJC,EAAmB,SAACX,GAIzB,OACC,cAAC,IAAD,CACCY,cAHwC,CAAEC,YAAa,IAIvDC,SAAU,SAACC,GAAD,OAAWf,EAAMgB,YAAYD,EAAMF,cAF9C,SAIE,gBAAGI,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,aAAzB,OACA,uBAAML,SAAUG,EAAhB,UACC,0BACCT,KAAK,cACLY,SAAUD,EACVJ,MAAOG,EAAOL,cACf,wBAAQQ,KAAK,SAAb,yBAOUC,EApDC,SAACtB,GAGhB,IAAIuB,EAAiBvB,EAAMwB,QAAQC,KAAI,SAAApB,GAAM,OAAI,cAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMN,GAAIG,EAAOH,QACvFwB,EAAmB1B,EAAM2B,SAASF,KAAI,SAAAf,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,aAG/E,OACC,sBAAKP,UAAWC,IAAEoB,QAAlB,UACC,qBAAKrB,UAAWC,IAAEwB,aAAlB,SACEL,IAEF,sBAAKpB,UAAWC,IAAEuB,SAAlB,UACC,8BAAMD,IACN,8BACC,cAAC,EAAD,CAAkBV,YAAahB,EAAMgB,uB,gBCGpCa,EAAYC,aAbM,SAACC,GACxB,MAAO,CACNP,QAASO,EAAMC,WAAWR,QAC1BG,SAAUI,EAAMC,WAAWL,YAUc,CAAEX,kBAG9BiB,sBAAQJ,EAAWK,IAAnBD,EATS,SAACjC,GACxB,OACC,cAAC,EAAD,CAAS2B,SAAU3B,EAAM2B,SAAUH,QAASxB,EAAMwB,QAASR,YAAahB,EAAMgB","file":"static/js/3.f6219c9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Y-N5\",\"dialogsItems\":\"Dialogs_dialogsItems__GISha\",\"dialog\":\"Dialogs_dialog__12MEw\",\"massages\":\"Dialogs_massages__3ncgs\",\"massage\":\"Dialogs_massage__MLUz_\",\"active\":\"Dialogs_active__1SEZa\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\ninterface DialogItemPropsType {\r\n\tname: string\r\n\tid: number\r\n}\r\n\r\nconst DialogItem = (props: DialogItemPropsType) => {\r\n\tlet path = '/dialogs/' + props.id\r\n\treturn (\r\n\t\t<div className={s.dialog + ' ' + s.active}>\r\n\t\t\t<NavLink to={path}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\ninterface MassagePropsType {\r\n\tmassage: string\r\n}\r\n\r\n\r\nconst Massage = (props: MassagePropsType) => {\r\n\treturn (\r\n\t\t<div className={s.massage}>\r\n\t\t\t{props.massage}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Massage","\r\nimport React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Massage from './Masage/Massage'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Formik } from 'formik'\r\nimport { DialogsPropsFromReduxType } from './DialogsContainer'\r\n\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsFromReduxType) => {\r\n\r\n\r\n\tlet dialogElements = props.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />)\r\n\tlet massagesElements = props.massages.map(massage => <Massage massage={massage.massage} />)\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.massages}>\r\n\t\t\t\t<div>{massagesElements}</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<DialogsInputForm sendMassage={props.sendMassage} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\ntype FormValuesType = {\r\n\tmassageBody: string\r\n}\r\ntype InputCallbackFormType = {\r\n\tsendMassage: (massageBody: string) => void\r\n}\r\n\r\nconst DialogsInputForm = (props: InputCallbackFormType) => {\r\n\r\n\r\n\tconst formInitialValues: FormValuesType = { massageBody: '' }\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={formInitialValues}\r\n\t\t\tonSubmit={(value) => props.sendMassage(value.massageBody)}\r\n\t\t>\r\n\t\t\t{({ handleSubmit, values, handleChange }) => (\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tname='massageBody'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tvalue={values.massageBody} />\r\n\t\t\t\t\t<button type='submit'>Send</button>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t</Formik >\r\n\t)\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { sendMassage } from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport withRedirect from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\nimport type { AppStateType } from './../../redux/redux-store'\r\nimport { InitialStateDialogsType, InitialStateMassagesType } from '../../redux/dialogs-reducer'\r\n\r\ntype MapStateToPropsType = {\r\n\tdialogs: Array<InitialStateDialogsType>\r\n\tmassages: Array<InitialStateMassagesType>\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n\treturn {\r\n\t\tdialogs: state.dialogPage.dialogs,\r\n\t\tmassages: state.dialogPage.massages\r\n\t}\r\n}\r\n\r\nconst DialogContainer = (props: DialogsPropsFromReduxType) => {\r\n\treturn (\r\n\t\t<Dialogs massages={props.massages} dialogs={props.dialogs} sendMassage={props.sendMassage} />\r\n\t)\r\n}\r\n\r\nconst connector = connect(mapStateToProps, { sendMassage })\r\nexport type DialogsPropsFromReduxType = ConnectedProps<typeof connector>\r\n\r\nexport default compose(connector, withRedirect)(DialogContainer)\r\n"],"sourceRoot":""}